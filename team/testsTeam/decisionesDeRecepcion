-----------------------------------------------------------------------------------------------------------
	
------------------------------------TEST ME SIRVE POKEMON--------------------------------------------------
Esta funcion lo que hace es, dado un nombre de un pokemon, revisar si la cantidad que tenemos de esa especie
en nuestro "mundo Team" (pokemonesLibres, pokemonesObtenidosGlobales y pokemonesReservados) es menor a lo
que necesito según los objetivos globales. ENtonces devuelve true indicando que ese poke me sirve, porque
me falta.

 //Semaforo y colas inicializadas
	sem_init(&(sem_pokemonesGlobalesAtrapados), 0, 1);

	sem_init(&(sem_pokemonesLibresEnElMapa), 0, 1);

	sem_init(&(sem_pokemonesObjetivoGlobal), 0, 1);

	sem_init(&(sem_pokemonesReservados), 0, 1);

	pokemonesAtrapadosGlobal = list_create();

	objetivoGlobalEntrenadores = list_create();

	pokemonesReservadosEnElMapa = list_create();

	pokemonesLibresEnElMapa = list_create();

	//Ahora creo los pokemones que tendrán los entrenadores de la prueba

	t_pokemon_entrenador* pokemonObjetivo1 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObjetivo1->cantidad = 2;
	pokemonObjetivo1->pokemon = "Pikachu";

	t_pokemon_entrenador* pokemonObtenido1 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObtenido1->cantidad = 2;
	pokemonObtenido1->pokemon = "Pepito";

	t_pokemon_entrenador* pokemonObjetivo2 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObjetivo2->cantidad = 1;
	pokemonObjetivo2->pokemon = "Pepito";

	t_pokemon_entrenador* pokemonObtenido2 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObtenido2->cantidad = 3;
	pokemonObtenido2->pokemon = "Pikachu";

	t_pokemon_entrenador* pokemonObjetivo3 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObjetivo3->cantidad = 2;
	pokemonObjetivo3->pokemon = "Bulbasaur";

	t_pokemon_entrenador* pokemonRandom1 = malloc(sizeof(t_pokemon_entrenador));
	pokemonRandom1->cantidad = 2;
	pokemonRandom1->pokemon = "Riquelme";

	t_pokemon_entrenador* pokemonRandom3 = malloc(sizeof(t_pokemon_entrenador));
		pokemonRandom3->cantidad = 1;
		pokemonRandom3->pokemon = "Riquelme";

	t_pokemon_entrenador* pokemonRandom2 = malloc(sizeof(t_pokemon_entrenador));
	pokemonRandom2->cantidad = 1;
	pokemonRandom2->pokemon = "Messi";

	t_pokemon_entrenador* pokemonObtenido3 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObtenido3->cantidad = 1;
	pokemonObtenido3->pokemon = "Bulbasaur";

	t_pokemon_entrenador_reservado* pokemonReservado1 = malloc(
			sizeof(t_pokemon_entrenador_reservado));
	pokemonReservado1->cantidad = 1;
	pokemonReservado1->pokemon = "Palermo";

	t_pokemon_entrenador_reservado* pokemonReservado2 = malloc(
			sizeof(t_pokemon_entrenador_reservado));
	pokemonReservado1->cantidad = 1;
	pokemonReservado1->pokemon = "ElGuille";

	list_add(pokemonesAtrapadosGlobal, pokemonObjetivo1);
	list_add(pokemonesAtrapadosGlobal, pokemonObjetivo2);
	list_add(pokemonesAtrapadosGlobal, pokemonObtenido2);

	list_add(pokemonesLibresEnElMapa, pokemonObjetivo3);
	list_add(pokemonesLibresEnElMapa, pokemonObtenido1);
	list_add(pokemonesLibresEnElMapa, pokemonObtenido3);
	list_add(pokemonesAtrapadosGlobal, pokemonRandom3);

	list_add(pokemonesReservadosEnElMapa, pokemonReservado1);
	list_add(pokemonesReservadosEnElMapa, pokemonReservado2);

	list_add(objetivoGlobalEntrenadores, pokemonRandom1);
	list_add(objetivoGlobalEntrenadores, pokemonRandom2);

	printf(
			"Pregunto si me sirve agregar a Baiano, y me tiene que decir que no. \n");

	printf("---------------------------------\n");

	if (meSirvePokemon("Baiano") == 0) {
		printf("Baiano no te sirve!\n");
	}

	printf("---------------------------------\n");

	printf(
				"Pregunto si me sirve agregar a Riquelme, y me tiene que decir que sí porque me faltan 2. \n");

		if (meSirvePokemon("Riquelme") == 1) {
				printf("Riquelme SI te sirve!\n");
			}

		printf("---------------------------------\n");

	printf(
			"Pregunto si me sirve agregar a Messi, y me tiene que decir que sí porque me falta 1. \n");

	if (meSirvePokemon("Messi") == 1) {
		printf("Messi SI te sirve!\n");
	}

	printf("---------------------------------\n");
	
	
-----------------------------------------------------------------------------------------------------------
	
------------------------------------TEST NECESITO POKEMON--------------------------------------------------
En sabado de soporte del 27/06 nos dijeron que debíamos cambiar la lógica del filtrado de mensajes appeared.
Esta función es la correcta según ese consejo porque se fija primero si el pokemon que llegó por mensaje
es parte de nuestro objetivo global; si no lo es devuelve cero. Si lo es, entonces se fija si ya atrapamos 
la cantidad que necesitamos; si ya atrapamos lo que necesitamos devuelve 0, y si todavía nos falta devuelve 1.
	
	
	
	
	sem_init(&(sem_pokemonesGlobalesAtrapados), 0, 1);

	sem_init(&(sem_pokemonesObjetivoGlobal), 0, 1);

	pokemonesAtrapadosGlobal = list_create();

	objetivoGlobalEntrenadores = list_create();

	//Ahora creo los pokemones que tendrán los entrenadores de la prueba

	t_pokemon_entrenador* pokemonObjetivo1 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObjetivo1->cantidad = 2;
	pokemonObjetivo1->pokemon = "Pikachu";

	t_pokemon_entrenador* pokemonObtenido1 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObtenido1->cantidad = 2;
	pokemonObtenido1->pokemon = "Pepito";

	t_pokemon_entrenador* pokemonObjetivo2 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObjetivo2->cantidad = 1;
	pokemonObjetivo2->pokemon = "Pepito";

	t_pokemon_entrenador* pokemonObtenido2 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObtenido2->cantidad = 3;
	pokemonObtenido2->pokemon = "Pikachu";

	t_pokemon_entrenador* pokemonObjetivo3 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObjetivo3->cantidad = 2;
	pokemonObjetivo3->pokemon = "Bulbasaur";

	t_pokemon_entrenador* pokemonObjetivo4 = malloc(
			sizeof(t_pokemon_entrenador));
	pokemonObjetivo4->cantidad = 2;
	pokemonObjetivo4->pokemon = "Bulbasaur";

	list_add(pokemonesAtrapadosGlobal, pokemonObjetivo1);
	list_add(pokemonesAtrapadosGlobal, pokemonObjetivo2);
	list_add(pokemonesAtrapadosGlobal, pokemonObtenido2);
	list_add(pokemonesAtrapadosGlobal, pokemonObjetivo4);

	list_add(objetivoGlobalEntrenadores, pokemonObjetivo3);
	list_add(objetivoGlobalEntrenadores, pokemonObtenido1);

	printf(
			"Pregunto si me sirve recibir a Pepito y me tiene que decir que sí porque me falta 1 \n");
	printf("----------------------------\n");
	if (necesitoPokemon("Pepito") != 0) {
		printf("Entró al if, lo necesitás a Pepito\n");
	}
	printf("----------------------------\n");

	printf(
			"Pregunto si me sirve recibir a Bulbasaur y me tiene que decir que no porque ya tengo 2 \n");
	printf("----------------------------\n");
	if (!necesitoPokemon("Bulbasaur")) {
		printf("Entró al if, no lo necesitás a Bulbasaur\n");
	}
	printf("----------------------------\n");

	printf(
			"Pregunto si me sirve recibir a Baiano y me tiene que decir que no porque no objetivo\n");
	printf("----------------------------\n");
	if (!necesitoPokemon("Baiano")) {
		printf("Entró al if, no lo necesitás a Baiano\n");
	}